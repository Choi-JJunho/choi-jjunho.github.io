{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Algorithm/1931/","result":{"data":{"site":{"siteMetadata":{"title":"Develop Blog","authorNickName":"Mr.Jun"}},"markdownRemark":{"id":"0265e230-2414-5231-9e0c-3dc69fc9b8b1","excerpt":"백준 1931번 : 회의실 배정 Problem 문제 한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I…","html":"<h1>백준 1931번 : 회의실 배정</h1>\n<hr>\n<p><a href=\"https://www.acmicpc.net/problem/1931\">Problem</a></p>\n<h2>문제</h2>\n<p>한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.</p>\n<h2>입력</h2>\n<p>첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다. 시작 시간과 끝나는 시간은 231-1보다 작거나 같은 자연수 또는 0이다.</p>\n<h2>출력</h2>\n<p>첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.</p>\n<h2>예제 입력 1</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">11\n1 4\n3 5\n0 6\n5 7\n3 8\n5 9\n6 10\n8 11\n8 12\n2 13\n12 14</code></pre></div>\n<h2>예제 출력 1</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4</code></pre></div>\n<hr>\n<h2>풀이</h2>\n<p>Greedy 알고리즘으로 해결할 수 있다.</p>\n<p>우선 입력받은 회의의 개수를 시작시간을 기준으로 오름차순 정렬한다.</p>\n<p>다음과 같은 정렬된 시간이 있을 때 가장 앞에 있는 시간을 비교군으로 설정하고 아래와 같은 과정을 거친다.</p>\n<p><img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028112031648.png\" alt=\"image-20201028112031648\"></p>\n<ol>\n<li>비교군을 기준으로 다음 시간과 비교한다.</li>\n</ol>\n<p>   <img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028112345258.png\" alt=\"image-20201028112345258\"></p>\n<ol>\n<li>\n<p>A~B 시간 사이에 C~D가 들어가는가? (D &#x3C;= B)</p>\n<p>  <img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028112139386.png\" alt=\"image-20201028112139386\"></p>\n</li>\n</ol>\n<p>   ​\t들어간다면 A~B를 제외하고 C~D를 비교군에 넣는다.</p>\n<p>   <img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028112408201.png\" alt=\"image-20201028112408201\"></p>\n<ol start=\"2\">\n<li>\n<p>B시간보다 C가 크거나 같은가? (B &#x3C;= C)</p>\n<p>  C~D를 비교군으로 설정하고 회의의 개수를 1 증가시킨다.</p>\n<p>  <img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028112641793.png\" alt=\"image-20201028112641793\"></p>\n</li>\n<li>1로 돌아가서 반복</li>\n</ol>\n<p>다음과 같은 경우는 회의의 뒷부분을 제외한다.</p>\n<p><img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028112857786.png\" alt=\"image-20201028112857786\"></p>\n<p><img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028113117722.png\" alt=\"image-20201028113117722\"></p>\n<h2>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">/**\n * 백준 1931번 문제\n * https://www.acmicpc.net/problem/1931\n */</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">,</span> front<span class=\"token punctuation\">,</span> back<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> v<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>front<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>back<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> back<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> v<span class=\"token operator\">+</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            result <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>second <span class=\"token operator\">&lt;</span> result<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            result <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>second <span class=\"token operator\">&lt;=</span> v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            result <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"백준 1931번 : 회의실 배정","date":"2020-10-28","category":"Algorithm","tags":["algorithm"],"cover":{"childImageSharp":{"fluid":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/46604/algorithm.png"}}}}}},"pageContext":{"slug":"/Algorithm/1931/","previous":{"fields":{"slug":"/Algorithm/2661/"},"frontmatter":{"title":"백준 2661번 : 좋은 수열","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}},"next":{"fields":{"slug":"/Algorithm/1676/"},"frontmatter":{"title":"백준 1676번 : 팩토리얼 0의 개수","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}},"recent":[{"node":{"fields":{"slug":"/Algorithm/10174/"},"frontmatter":{"title":"백준 10174번 : 팰린드롬","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1431/"},"frontmatter":{"title":"백준 1431번 : 시리얼 번호","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1676/"},"frontmatter":{"title":"백준 1676번 : 팩토리얼 0의 개수","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1931/"},"frontmatter":{"title":"백준 1931번 : 회의실 배정","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}}]}},"staticQueryHashes":["1643656590","2512624605","58195306","765161310"]}