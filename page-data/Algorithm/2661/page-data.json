{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Algorithm/2661/","result":{"data":{"site":{"siteMetadata":{"title":"Develop Blog","authorNickName":"Mr.Jun"}},"markdownRemark":{"id":"1c60523d-404f-5cce-9aaa-67e5c9c821fe","excerpt":"백준 2661번 : 좋은 수열 Problem 문제 숫자 1, 2, 3으로만 이루어지는 수열이 있다. 임의의 길이의 인접한 두 개의 부분 수열이 동일한 것이 있으면, 그 수열을 나쁜 수열이라고 부른다. 그렇지 않은 수열은 좋은 수열이다. 다음은 나쁜 수열의 예이다. 33 3212132…","html":"<h1>백준 2661번 : 좋은 수열</h1>\n<hr>\n<p><a href=\"https://www.acmicpc.net/problem/2661\">Problem</a></p>\n<h2>문제</h2>\n<p>숫자 1, 2, 3으로만 이루어지는 수열이 있다. 임의의 길이의 인접한 두 개의 부분 수열이 동일한 것이 있으면, 그 수열을 나쁜 수열이라고 부른다. 그렇지 않은 수열은 좋은 수열이다.</p>\n<p>다음은 나쁜 수열의 예이다.</p>\n<ul>\n<li>33</li>\n<li>32121323</li>\n<li>123123213</li>\n</ul>\n<p>다음은 좋은 수열의 예이다.</p>\n<ul>\n<li>2</li>\n<li>32</li>\n<li>32123</li>\n<li>1232123</li>\n</ul>\n<p>길이가 N인 좋은 수열들을 N자리의 정수로 보아 그중 가장 작은 수를 나타내는 수열을 구하는 프로그램을 작성하라. 예를 들면, 1213121과 2123212는 모두 좋은 수열이지만 그 중에서 작은 수를 나타내는 수열은 1213121이다.</p>\n<h2>입력</h2>\n<p>입력은 숫자 N하나로 이루어진다. N은 1 이상 80 이하이다.</p>\n<h2>출력</h2>\n<p>첫 번째 줄에 1, 2, 3으로만 이루어져 있는 길이가 N인 좋은 수열들 중에서 가장 작은 수를 나타내는 수열만 출력한다. 수열을 이루는 1, 2, 3들 사이에는 빈칸을 두지 않는다.</p>\n<h2>예제 입력 1</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">7</code></pre></div>\n<h2>예제 출력 1</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1213121</code></pre></div>\n<hr>\n<h2>풀이</h2>\n<p>백트래킹을 이용하는 문제로 다음과 같은 과정을 거친다.</p>\n<ol>\n<li>string을 입력받은 N만큼 1로 초기화한다.</li>\n</ol>\n<p><img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028110025562.png\" alt=\"image-20201028110025562\"></p>\n<ol start=\"2\">\n<li>가장 처음부분은 1이 들어가므로 현재 다루고 있는 부분을 가르키는 cnt(index)는 1부터 시작한다.</li>\n</ol>\n<p><img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028110239747.png\" alt=\"image-20201028110239747\"></p>\n<ol start=\"3\">\n<li>\n<p>1, 2, 3중 적합한 수가 있는지 판별한다.</p>\n<ol>\n<li>이전 수 str[cnt-1]와 같은 수인가? -> 같다면 false</li>\n<li>반복되는 조합이 있는가? -> 반복되는 조합이 있다면 false </li>\n</ol>\n<p>  ex) <strong>123123</strong>, 1<strong>231231</strong></p>\n</li>\n<li>\n<p>적합한 수가 있다면 해당 수를 넣는다. (이때 flag는 0으로 초기화)</p>\n<p><img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028110656259.png\" alt=\"image-20201028110656259\"></p>\n</li>\n<li>\n<p>만약 적합한 수가 하나도 없다면 cnt를 1감소시키고 이전에 해당하는 수가 적합하지 않음(flag)을 저장한다. </p>\n<p><img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028111127220.png\" alt=\"image-20201028111127220\"></p>\n<p><img src=\"C:%5CUsers%5Cjunho%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201028111149196.png\" alt=\"image-20201028111149196\"></p>\n</li>\n<li>flag에 해당하는 수는 판별하지 않고 3번부터 반복</li>\n</ol>\n<h2>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">/**\n * 백준 2661번 문제\n * https://www.acmicpc.net/problem/2661\n */</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 전체 길이</span>\n<span class=\"token keyword\">int</span> N<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 현재 수열의 길이</span>\n<span class=\"token keyword\">int</span> cnt <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// n이 좋은 수열에 적합한지 판별한다.</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">isGood</span><span class=\"token punctuation\">(</span>string <span class=\"token operator\">&amp;</span>str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    string front<span class=\"token punctuation\">,</span> back<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 현재 수와 이전 수가 같을 경우 false를 반환한다.</span>\n    <span class=\"token comment\">// ex) 11, 22, 33</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// n을 문자열의 끝에 넣는다</span>\n    str<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 현재 수열의 길이의 절반만큼 넓이를 잡아 반복되는 수인지 비교하기 위한 변수.</span>\n    width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cnt<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">//width가 1이되면 종료</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 현재 수열의 길이 / 2 만큼씩 비교한다.</span>\n        <span class=\"token comment\">// width는 1씩 줄어든다.</span>\n        <span class=\"token comment\">// ex) 121312 -> 121 312 -> 12 13 12</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+</span> width <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>cnt<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> width<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            front <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            back <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>back <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">&amp;&amp;</span> front <span class=\"token operator\">==</span> back<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        width<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 재귀함수로 구현</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">doSomthing</span><span class=\"token punctuation\">(</span>string <span class=\"token operator\">&amp;</span>str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 현재 수열의 길이가 전체수열의 길이와 같아지면 출력하고 끝</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cnt <span class=\"token operator\">==</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// flag : 부적합한 수가 들어가있다.</span>\n    <span class=\"token comment\">// 적합한 수라면 해당 수를 넣고 cnt(현재 수열의 길이) ++</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag <span class=\"token operator\">!=</span> <span class=\"token string\">'1'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isGood</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        str<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\n        cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">doSomthing</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag <span class=\"token operator\">!=</span> <span class=\"token string\">'2'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isGood</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        str<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span>\n        cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">doSomthing</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag <span class=\"token operator\">!=</span> <span class=\"token string\">'3'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isGood</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        str<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">;</span>\n        cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">doSomthing</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 1, 2, 3 모두 부적합하다면</span>\n        <span class=\"token comment\">// 그 이전 수가 부적합하므로 flag로 넣어준다.</span>\n        tmp <span class=\"token operator\">=</span> str<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        cnt<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">doSomthing</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// string의 크기를 N으로 설정하고 1로 초기화</span>\n    string <span class=\"token function\">str</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">doSomthing</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"백준 2661번 : 좋은 수열","date":"2020-10-28","category":"Algorithm","tags":["algorithm"],"cover":{"childImageSharp":{"fluid":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/46604/algorithm.png"}}}}}},"pageContext":{"slug":"/Algorithm/2661/","previous":{"fields":{"slug":"/Algorithm/4948/"},"frontmatter":{"title":"백준 4948번 : 베르트랑 공준","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}},"next":{"fields":{"slug":"/Algorithm/1931/"},"frontmatter":{"title":"백준 1931번 : 회의실 배정","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}},"recent":[{"node":{"fields":{"slug":"/Algorithm/10174/"},"frontmatter":{"title":"백준 10174번 : 팰린드롬","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1431/"},"frontmatter":{"title":"백준 1431번 : 시리얼 번호","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1676/"},"frontmatter":{"title":"백준 1676번 : 팩토리얼 0의 개수","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1931/"},"frontmatter":{"title":"백준 1931번 : 회의실 배정","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}}]}},"staticQueryHashes":["1643656590","2512624605","58195306","765161310"]}