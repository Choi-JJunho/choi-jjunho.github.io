{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Algorithm/4948/","result":{"data":{"site":{"siteMetadata":{"title":"Develop Blog","authorNickName":"Mr.Jun"}},"markdownRemark":{"id":"8b0402fc-2086-5b34-8839-efdfb77c1da8","excerpt":"백준 4948번 : 베르트랑 공준 Problem 문제 베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n보다 작거나 같은 소수는 적어도 하나 존재한다는 내용을 담고 있다. 이 명제는 조제프 베르트랑이 1845년에 추측했고, 파프누티 체비쇼프가 185…","html":"<h1>백준 4948번 : 베르트랑 공준</h1>\n<hr>\n<p><a href=\"https://www.acmicpc.net/problem/4948\">Problem</a></p>\n<h2>문제</h2>\n<p>베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n보다 작거나 같은 소수는 적어도 하나 존재한다는 내용을 담고 있다.</p>\n<p>이 명제는 조제프 베르트랑이 1845년에 추측했고, 파프누티 체비쇼프가 1850년에 증명했다.</p>\n<p>예를 들어, 10보다 크고, 20보다 작거나 같은 소수는 4개가 있다. (11, 13, 17, 19) 또, 14보다 크고, 28보다 작거나 같은 소수는 3개가 있다. (17,19, 23)</p>\n<p>n이 주어졌을 때, n보다 크고, 2n보다 작거나 같은 소수의 개수를 구하는 프로그램을 작성하시오. </p>\n<h2>입력</h2>\n<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 케이스는 n을 포함하며, 한 줄로 이루어져 있다. (n ≤ 123456)</p>\n<p>입력의 마지막에는 0이 주어진다.</p>\n<h2>출력</h2>\n<p>각 테스트 케이스에 대해서, n보다 크고, 2n보다 작거나 같은 소수의 개수를 출력한다.</p>\n<h2>예제 입력 1</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n10\n13\n100\n1000\n10000\n100000\n0</code></pre></div>\n<h2>예제 출력 1</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n4\n3\n21\n135\n1033\n8392</code></pre></div>\n<hr>\n<h2>풀이</h2>\n<p>에라토스테네스의 채 방법을 이용한다.</p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b9/Sieve_of_Eratosthenes_animation.gif\" alt=\"에라토스테네스의 체\"></p>\n<ul>\n<li>2부터 소수를 구하고자 하는 구간의 모든 수를 나열한다. 그림에서 회색 사각형으로 두른 수들이 여기에 해당한다.</li>\n<li>2는 소수이므로 오른쪽에 2를 쓴다. (빨간색)</li>\n<li>자기 자신을 제외한 2의 배수를 모두 지운다.</li>\n<li>남아있는 수 가운데 3은 소수이므로 오른쪽에 3을 쓴다. (초록색)</li>\n<li>자기 자신을 제외한 3의 배수를 모두 지운다.</li>\n<li>남아있는 수 가운데 5는 소수이므로 오른쪽에 5를 쓴다. (파란색)</li>\n<li>자기 자신을 제외한 5의 배수를 모두 지운다.</li>\n<li>남아있는 수 가운데 7은 소수이므로 오른쪽에 7을 쓴다. (노란색)</li>\n<li>자기 자신을 제외한 7의 배수를 모두 지운다.</li>\n<li>위의 과정을 반복하면 구하는 구간의 모든 소수가 남는다.</li>\n</ul>\n<h2>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">/**\n * 백준 4948번 문제\n * https://www.acmicpc.net/problem/4948\n */</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 소수를 구한다</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">getPrimeNumber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> n<span class=\"token punctuation\">)</span>\n            cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 에라토스테네스의 채</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 배열을 다시 false로 초기화</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> cnt<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">250000</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>N <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">getPrimeNumber</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"백준 4948번 : 베르트랑 공준","date":"2020-10-28","category":"Algorithm","tags":["algorithm"],"cover":{"childImageSharp":{"fluid":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/46604/algorithm.png"}}}}}},"pageContext":{"slug":"/Algorithm/4948/","previous":{"fields":{"slug":"/Algorithm/2660/"},"frontmatter":{"title":"백준 2660번 : 회장뽑기","tags":["algorithm"],"category":"Algorithm","date":"2020-09-10","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}},"next":{"fields":{"slug":"/Algorithm/2661/"},"frontmatter":{"title":"백준 2661번 : 좋은 수열","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}},"recent":[{"node":{"fields":{"slug":"/Algorithm/10174/"},"frontmatter":{"title":"백준 10174번 : 팰린드롬","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1431/"},"frontmatter":{"title":"백준 1431번 : 시리얼 번호","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1676/"},"frontmatter":{"title":"백준 1676번 : 팩토리얼 0의 개수","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}},{"node":{"fields":{"slug":"/Algorithm/1931/"},"frontmatter":{"title":"백준 1931번 : 회의실 배정","tags":["algorithm"],"category":"Algorithm","date":"2020-10-28","cover":{"childImageSharp":{"fixed":{"src":"/static/5bc138257b1877df8b6bf7417a14541b/31987/algorithm.png"}}}}}}]}},"staticQueryHashes":["1643656590","2512624605","58195306","765161310"]}