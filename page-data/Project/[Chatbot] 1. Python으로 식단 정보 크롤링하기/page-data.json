{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Project/[Chatbot] 1. Python으로 식단 정보 크롤링하기/","result":{"data":{"site":{"siteMetadata":{"title":"Develop Blog","authorNickName":"Mr.Jun"}},"markdownRemark":{"id":"e4e68922-506c-5d0d-b7e1-8b9991cd8751","excerpt":"아래 링크는 우리학교에서 식단 정보를 알려주는 사이트다. https://coop.koreatech.ac.kr/dining/menu.php 해당 사이트에서 정보를 읽어와서 DB에 저장해볼 것이다. 사용 도구 언어 : Python 3.8.2 IDE : Pycharm DB : MySQL…","html":"<p>아래 링크는 우리학교에서 식단 정보를 알려주는 사이트다.</p>\n<p><a href=\"https://coop.koreatech.ac.kr/dining/menu.php\">https://coop.koreatech.ac.kr/dining/menu.php</a></p>\n<p>해당 사이트에서 정보를 읽어와서 DB에 저장해볼 것이다.</p>\n<p><strong>[사용 도구]</strong></p>\n<p>언어 : Python 3.8.2</p>\n<p>IDE : Pycharm</p>\n<p>DB : MySQL 5.7</p>\n<p><strong>[코드]</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>request <span class=\"token keyword\">import</span> urlopen\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">import</span> ssl\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> pymysql\n\ncontext <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>_create_unverified_context<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nURL <span class=\"token operator\">=</span> urlopen<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://coop.koreatech.ac.kr/dining/menu.php\"</span><span class=\"token punctuation\">,</span> context<span class=\"token operator\">=</span>context<span class=\"token punctuation\">)</span>\nbs <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>URL<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span>\n\nname <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'menu-list?.'</span><span class=\"token punctuation\">)</span>\nmenuList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> menulist <span class=\"token keyword\">in</span> bs<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"td\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">:</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    before <span class=\"token operator\">=</span> menulist<span class=\"token punctuation\">.</span>text\n    after <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> before<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>after<span class=\"token operator\">==</span><span class=\"token string\">\"\\r\\n\\xa0\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n         menuList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n         menuList<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>after<span class=\"token punctuation\">)</span>\n\nbreakfast <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nlunch <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ndinner <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n         <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n              breakfast<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>menuList<span class=\"token punctuation\">[</span>a<span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n         <span class=\"token keyword\">elif</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n              lunch<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>menuList<span class=\"token punctuation\">[</span>a<span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n         <span class=\"token keyword\">elif</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n              dinner<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>menuList<span class=\"token punctuation\">[</span>a<span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nconn <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'12345'</span><span class=\"token punctuation\">,</span> db<span class=\"token operator\">=</span><span class=\"token string\">'daily_menu'</span><span class=\"token punctuation\">,</span> charset<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> curs<span class=\"token punctuation\">:</span>\n       curs<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'TRUNCATE TABLE breakfast;'</span><span class=\"token punctuation\">)</span>\n       curs<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'TRUNCATE TABLE lunch;'</span><span class=\"token punctuation\">)</span>\n       curs<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'TRUNCATE TABLE dinner;'</span><span class=\"token punctuation\">)</span>\n\n       sql_b <span class=\"token operator\">=</span> <span class=\"token string\">'INSERT INTO breakfast(korean, special, onedish, western ,faculty ,subak ,cam2_1 ,cam2_2) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)'</span>\n       sql_l <span class=\"token operator\">=</span> <span class=\"token string\">'INSERT INTO lunch(korean, special, onedish, western ,faculty ,subak ,cam2_1 ,cam2_2) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)'</span>\n       sql_d <span class=\"token operator\">=</span> <span class=\"token string\">'INSERT INTO dinner(korean, special, onedish, western ,faculty ,subak ,cam2_1 ,cam2_2) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)'</span>\n       <span class=\"token keyword\">for</span> flag <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                 var <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>breakfast<span class=\"token punctuation\">)</span>\n                 curs<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql_b<span class=\"token punctuation\">,</span> var<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span><span class=\"token punctuation\">(</span>flag <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                 var <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>lunch<span class=\"token punctuation\">)</span>\n                 curs<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql_l<span class=\"token punctuation\">,</span> var<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span><span class=\"token punctuation\">(</span>flag <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                 var <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>dinner<span class=\"token punctuation\">)</span>\n                 curs<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql_d<span class=\"token punctuation\">,</span> var<span class=\"token punctuation\">)</span>\n\n       conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n       rs <span class=\"token operator\">=</span> curs<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> rs<span class=\"token punctuation\">:</span>\n           <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n       conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>[설명]</h2>\n<p><strong>breakfast, lunch, dinner 세 테이블의 구조는 아래와 동일하다.</strong></p>\n<p><img src=\"https://blog.kakaocdn.net/dn/7DWGo/btqC6mye74Y/IAFVdaImlC5CNEKAjXYf41/img.png\" alt=\"img\">breakfast table 구조</p>\n<p>코드는 다음과 같은 흐름으로 진행된다.</p>\n<p><strong>사이트에서 식단의 정보를 가져온다. -> 가져온 식단 정보를 8개씩 나누어 아침, 점심, 저녁 리스트에 각각 넣는다 (식단의 내용은 8개의 주제로 나뉘어져 있다 {한식, 특식.. 등등}) -> 가져온 내용을 아침, 점심, 저녁 Table에 각각 저장한다.</strong></p>\n<p>- SSL인증을 거쳐갈 임시의 context를 생성하기위해 <em>create</em>unverified_context()함수를 사용했다.</p>\n<p>- execute() 메서드는 하나의 Row (하나의 Tuple 데이타)를 치환하여 실행하기 때문에 breakfast를 Tuple로 변환해주었다.</p>\n<p>- 당일날에 해당하는 데이터만을 필요로 하기 때문에 데이터를 갱신할 때 마다 테이블을 초기화 시키기 위해 SQL문에서 TRUNCATE를 사용했다.</p>\n<p>- td태그의 class값에 대해 크롤링해오는데 해당 시간대에 따라서 td태그의 클래스값 뒤에 ‘o’가 붙어서 정규표현식을 이용해 뒤에 한글자를 필터링했다.</p>\n<p><strong>‘menu-time?.’</strong></p>\n<p><img src=\"https://blog.kakaocdn.net/dn/nihro/btqC6PUu0eO/LQsnCI4blqNCXmqTORGkC0/img.png\" alt=\"img\"></p>\n<p>해당 시간대의 td태그의 클래스값</p>","frontmatter":{"title":"[Chatbot] 1. Python으로 식단 정보 크롤링하기","date":"2020-03-31","category":"Project","tags":["project","kakao"],"cover":{"childImageSharp":{"fluid":{"src":"/static/123fbd5b1a17b40a23e8fe9a8447d24a/9dc27/kakao.jpg"}}}}}},"pageContext":{"slug":"/Project/[Chatbot] 1. Python으로 식단 정보 크롤링하기/","previous":{"fields":{"slug":"/Project/[Chatbot] 0. 프로젝트를 시작하며/"},"frontmatter":{"title":"[Chatbot] 0. 프로젝트를 시작하며..","tags":["project","kakao"],"category":"Project","date":"2020-03-30","cover":{"childImageSharp":{"fixed":{"src":"/static/123fbd5b1a17b40a23e8fe9a8447d24a/9dc27/kakao.jpg"}}}}},"next":{"fields":{"slug":"/Project/[Chatbot] 2. AWS 시작하기/"},"frontmatter":{"title":"[Chatbot] 2. AWS 시작하기","tags":["project","kakao"],"category":"Project","date":"2020-04-03","cover":{"childImageSharp":{"fixed":{"src":"/static/123fbd5b1a17b40a23e8fe9a8447d24a/9dc27/kakao.jpg"}}}}},"recent":[{"node":{"fields":{"slug":"/Project/[Chatbot] 5. 카카오 오픈빌더로 배포/"},"frontmatter":{"title":"[Chatbot] 5. 카카오 오픈빌더로 배포","tags":["project","kakao"],"category":"Project","date":"2020-04-06","cover":{"childImageSharp":{"fixed":{"src":"/static/123fbd5b1a17b40a23e8fe9a8447d24a/9dc27/kakao.jpg"}}}}}},{"node":{"fields":{"slug":"/Project/[Chatbot] 4. spring 프로젝트 서버로 올리기/"},"frontmatter":{"title":"[Chatbot] 4. spring 프로젝트 서버로 올리기","tags":["project","kakao"],"category":"Project","date":"2020-04-05","cover":{"childImageSharp":{"fixed":{"src":"/static/123fbd5b1a17b40a23e8fe9a8447d24a/9dc27/kakao.jpg"}}}}}},{"node":{"fields":{"slug":"/Project/[Chatbot] 3. crontab으로 스케줄링하기/"},"frontmatter":{"title":"[Chatbot] 3. crontab으로 스케줄링하기","tags":["project","kakao"],"category":"Project","date":"2020-04-04","cover":{"childImageSharp":{"fixed":{"src":"/static/123fbd5b1a17b40a23e8fe9a8447d24a/9dc27/kakao.jpg"}}}}}},{"node":{"fields":{"slug":"/Project/[Chatbot] 2. AWS 시작하기/"},"frontmatter":{"title":"[Chatbot] 2. AWS 시작하기","tags":["project","kakao"],"category":"Project","date":"2020-04-03","cover":{"childImageSharp":{"fixed":{"src":"/static/123fbd5b1a17b40a23e8fe9a8447d24a/9dc27/kakao.jpg"}}}}}}]}},"staticQueryHashes":["1643656590","2512624605","58195306","765161310"]}