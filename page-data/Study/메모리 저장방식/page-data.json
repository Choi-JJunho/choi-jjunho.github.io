{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Study/메모리 저장방식/","result":{"data":{"site":{"siteMetadata":{"title":"Develop Blog","authorNickName":"Mr.Jun"}},"markdownRemark":{"id":"0707454f-1db4-5d5c-bc00-fe2e2a3ce305","excerpt":"바이트 순서(Byte Order) - Big Endian 데이터가 상위 바이트부터 적재하는 방식 최상위바이트가 가장 낮은 메모리 주소부터 저장되는 방식 사람이 읽는 데 익숙하여 디버깅에 있어 편리하다는 특징이 있다. img출처 : https://ko.wikipedia.org/wiki…","html":"<p><strong>바이트 순서(Byte Order)</strong></p>\n<p><strong>- Big Endian</strong></p>\n<ul>\n<li>데이터가 상위 바이트부터 적재하는 방식</li>\n<li>최상위바이트가 가장 낮은 메모리 주소부터 저장되는 방식</li>\n<li>사람이 읽는 데 익숙하여 디버깅에 있어 편리하다는 특징이 있다.</li>\n</ul>\n<p><img src=\"https://blog.kakaocdn.net/dn/AAAK0/btqARyIBaUq/Zva1qSCAbcmir0lVBHlw71/img.png\" alt=\"img\">출처 : <a href=\"https://ko.wikipedia.org/wiki/%EC%97%94%EB%94%94%EC%96%B8\">https://ko.wikipedia.org/wiki/%EC%97%94%EB%94%94%EC%96%B8</a></p>\n<p><strong>- Little Endian</strong></p>\n<ul>\n<li>데이터가 하위 바이트부터 메모리에 적재(Host Ordering)</li>\n<li>최상위 바이트가 가장 높은 메모리 주소부터 저장되는 방식</li>\n<li>기계의 연산이 효율적이라는 특징이 있다.</li>\n</ul>\n<p><img src=\"https://blog.kakaocdn.net/dn/buvxOC/btqATgtHRhA/ujH470wkA12ILAqP3zzA5K/img.png\" alt=\"img\">출처 : <a href=\"https://ko.wikipedia.org/wiki/%EC%97%94%EB%94%94%EC%96%B8\">https://ko.wikipedia.org/wiki/%EC%97%94%EB%94%94%EC%96%B8</a></p>\n<ul>\n<li>\n<p>기계 연산의 효율성은 아래와 같은 이유가 있다.</p>\n<ul>\n<li><strong>아래 그림에서 Big Endian의 경우 32비트 수인 0X2A를 읽기 위해 32비트 모두를 읽어야하지만</strong></li>\n<li><strong>Little Endian의 경우 32비트의 수 중 1, 2바이트만 떼어내면 바로 8, 16비트를 얻어낼 수 있다.</strong></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://blog.kakaocdn.net/dn/cEyoBX/btqAQ4gUWOR/wk8RmBMo0ar3a4Us1DUc90/img.png\" alt=\"img\">Little Endian 연산의 이점</p>\n<p><strong>- ASLR(Address Space Layout Randomization)</strong> </p>\n<ul>\n<li>프로그램을 실행할 때 마다 메모리 영역(주소)가 변경되는 것</li>\n<li>메모리 해킹의 방지 역할을 한다.</li>\n</ul>\n<p><img src=\"https://blog.kakaocdn.net/dn/bcZfva/btqARXg8e3F/iLfWnbXZNI8cE2dxIXCRnk/img.png\" alt=\"img\">Visual Studio에서 ASLR 설정메뉴</p>\n<p><strong>- 포인터</strong></p>\n<ul>\n<li>저장된 데이터를 주소로 본다. (int *pointer = &#x26;Data)</li>\n<li>*pnData 포인터의 역참조 *p = 300; (해당 주소의 값을 다룬다.)</li>\n</ul>\n<p><img src=\"https://blog.kakaocdn.net/dn/dQhFt1/btqARyaKyAR/TIFnHKpJzv2p7gt3RhwQYK/img.png\" alt=\"img\">출처 : <a href=\"https://dojang.io/mod/page/view.php?id=276\">https://dojang.io/mod/page/view.php?id=276</a></p>\n<ul>\n<li>직접지정의 예</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x0012ff28</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"[Study] 메모리 저장방식","date":"2020-01-04","category":"Study","tags":["Study","Computer Science"],"cover":{"childImageSharp":{"fluid":{"src":"/static/df3f16ca3475dd62168e61f33cb978be/0f3a1/study.jpg"}}}}}},"pageContext":{"slug":"/Study/메모리 저장방식/","previous":{"fields":{"slug":"/Study/메모리의 구조/"},"frontmatter":{"title":"[Study] User와 Kernel","tags":["Study","Computer Science"],"category":"Study","date":"2020-01-02","cover":{"childImageSharp":{"fixed":{"src":"/static/df3f16ca3475dd62168e61f33cb978be/9a128/study.jpg"}}}}},"next":{"fields":{"slug":"/Language/[C언어] 전처리기/"},"frontmatter":{"title":"[C언어] 전처리기","tags":["Language","C"],"category":"Language","date":"2020-01-05","cover":{"childImageSharp":{"fixed":{"src":"/static/5dc22da92b40fc0ec8d9725363514341/31987/language.png"}}}}},"recent":[{"node":{"fields":{"slug":"/Study/Exception Handling/"},"frontmatter":{"title":"[Study] Exception Handling","tags":["Study","Java"],"category":"Study","date":"2020-05-06","cover":{"childImageSharp":{"fixed":{"src":"/static/df3f16ca3475dd62168e61f33cb978be/9a128/study.jpg"}}}}}},{"node":{"fields":{"slug":"/Study/메모리 저장방식/"},"frontmatter":{"title":"[Study] 메모리 저장방식","tags":["Study","Computer Science"],"category":"Study","date":"2020-01-04","cover":{"childImageSharp":{"fixed":{"src":"/static/df3f16ca3475dd62168e61f33cb978be/9a128/study.jpg"}}}}}},{"node":{"fields":{"slug":"/Study/메모리의 구조/"},"frontmatter":{"title":"[Study] User와 Kernel","tags":["Study","Computer Science"],"category":"Study","date":"2020-01-02","cover":{"childImageSharp":{"fixed":{"src":"/static/df3f16ca3475dd62168e61f33cb978be/9a128/study.jpg"}}}}}},{"node":{"fields":{"slug":"/Study/User와 Kernel/"},"frontmatter":{"title":"[Study] User와 Kernel","tags":["Study","Computer Science"],"category":"Study","date":"2020-01-01","cover":{"childImageSharp":{"fixed":{"src":"/static/df3f16ca3475dd62168e61f33cb978be/9a128/study.jpg"}}}}}}]}},"staticQueryHashes":["1643656590","2512624605","58195306","765161310"]}